{"version":3,"sources":["components/PhoneList/PhoneList.module.css","components/PhoneItem/PhoneItem.module.css","components/Filter/Filter.module.css","components/FormSubmit/FormSubmit.module.css","components/FormSubmit/FormSubmit.js","components/PhoneItem/PhoneItem.js","components/PhoneList/PhoneList.js","components/Filter/Filter.js","store/contacts.js","store/filtration.js","App.js","store/store.js","index.js"],"names":["module","exports","FormSubmit","phone","title","submitContact","useState","name","setName","number","setNumder","className","css","form","onSubmit","e","preventDefault","contact","id","uuidv4","label","description","input","type","pattern","required","value","onChange","target","button","propType","PropTypes","string","addContact","func","PhoneItem","removeContact","item","text","onClick","CreateContactList","filterContact","block","list","map","Filter","filter","conteiner","slice","createSlice","initialState","items","reducers","state","action","payload","actions","selectContactItem","contacts","search","filterContacts","selectFilter","filtration","App","dispatch","useDispatch","listConcacts","useSelector","checkContact","find","toLowerCase","alert","includes","contactsPersistConfig","key","storage","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4d8e35a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PhoneList_block__2ErmQ\",\"title\":\"PhoneList_title__30o4l\",\"list\":\"PhoneList_list__tBlJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PhoneItem_item__92M4a\",\"text\":\"PhoneItem_text__2haGZ\",\"button\":\"PhoneItem_button__xRX8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Filter_conteiner__2eWyT\",\"title\":\"Filter_title__3gaZf\",\"input\":\"Filter_input__3FVHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormSubmit_form__Ro_6R\",\"label\":\"FormSubmit_label__1aX-6\",\"description\":\"FormSubmit_description__3Wymo\",\"input\":\"FormSubmit_input__3YQap\",\"button\":\"FormSubmit_button__1ZqXE\"};","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport css from '../FormSubmit/FormSubmit.module.css';\n\nfunction FormSubmit({ phone, title, submitContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumder] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumder = e => {\n    setNumder(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    submitContact(contact);\n    setName('');\n    setNumder('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.description}>{title}</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n\n      <label className={css.label}>\n        <p className={css.description}>{phone}</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumder}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\nFormSubmit.propType = {\n  title: PropTypes.string,\n  addContact: PropTypes.func,\n  phone: PropTypes.string,\n};\n\nexport default FormSubmit;\n","import PropTypes from 'prop-types';\nimport css from '../PhoneItem/PhoneItem.module.css';\n\nfunction PhoneItem({ id, name, number, removeContact }) {\n  return (\n    <li className={css.item}>\n      <p>{name}</p>: <p className={css.text}>{number}</p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => removeContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nPhoneItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  removeContact: PropTypes.func,\n};\n\nexport default PhoneItem;\n","import PropTypes from 'prop-types';\nimport css from '../PhoneList/PhoneList.module.css';\nimport PhoneItem from '../PhoneItem/PhoneItem';\n\nconst CreateContactList = ({ title, removeContact, filterContact }) => {\n  return (\n    <section className={css.block}>\n      <h2 className={css.title}>{title}</h2>\n      <ul className={css.list}>\n        {filterContact().map(({ id, name, number }) => (\n          <PhoneItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            removeContact={removeContact}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCreateContactList.propTypes = {\n  title: PropTypes.string,\n  filterContact: PropTypes.func,\n  removeContact: PropTypes.func,\n};\n\nexport default CreateContactList;\n","import PropTypes from 'prop-types';\nimport css from '../Filter/Filter.module.css';\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <div className={css.conteiner}>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propType = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  },\n  reducers: {\n    addContact: (state, action) => ({\n      items: [...state.items, action.payload],\n    }),\n    removeContact: (state, action) => ({\n      items: state.items.filter(({ id }) => id !== action.payload),\n    }),\n  },\n});\n\nexport const { addContact, removeContact } = slice.actions;\n\nexport const selectContactItem = state => state.contacts.items;\n\nexport default slice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst slice = createSlice({\n  name: 'filtration',\n  initialState: {\n    search: '',\n  },\n  reducers: {\n    filterContacts: (state, { payload }) => ({\n      search: payload,\n    }),\n  },\n});\n\nexport const { filterContacts } = slice.actions;\n\nexport const selectFilter = state => state.filtration.search;\n\nexport default slice.reducer;\n","import './App.css';\nimport FormSubmit from './components/FormSubmit/FormSubmit';\nimport CreateContactList from './components/PhoneList/PhoneList';\nimport Filter from './components/Filter/Filter';\nimport { selectContactItem, addContact, removeContact } from './store/contacts';\nimport { filterContacts, selectFilter } from './store/filtration';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const listConcacts = useSelector(selectContactItem);\n  const payload = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  const submitContact = contact => {\n    if (!checkContact(contact.name)) {\n      dispatch(addContact(contact));\n    } else {\n      alert(`${contact.name} is alredy in contacts`);\n    }\n  };\n\n  const checkContact = name => {\n    return listConcacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const filterContact = () => {\n    return listConcacts.filter(({ name }) =>\n      name.toLowerCase().includes(payload.toLowerCase()),\n    );\n  };\n\n  const clearContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <FormSubmit\n        title={'Name'}\n        phone={'Number'}\n        submitContact={submitContact}\n      />\n      <Filter onChange={handleChange} />\n      <CreateContactList\n        filterContact={filterContact}\n        title={'Contacts'}\n        removeContact={clearContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contacts from '../store/contacts';\nimport filtration from '../store/filtration';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage: storage,\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contacts),\n    filtration: filtration,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './store/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}